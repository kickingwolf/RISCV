	0:		030000ef		jal x1 0x30 <main>	#跳转至主函数
	4:		00000013		nop					#
	8:		00000013		nop					#  
	c:		00000013		nop					#
	10:		00000013		nop					#
	14:		00000013		nop					#
	18:		00000013		nop					#
	1c:		00000013		nop					#
	20:		00000013		nop					#
	24:		00000013		nop					#
	28:		00000013		nop					#
	2c:		04c000ef		jal x1 0x78 <hhh>	#中断向量表，跳转至定时器服务

00000030 <main>:								#主函数
	30:		88800113		addi x2 x0 -1912	#配置IO输出值，fffff888
	34:		48202023        sw x2 1152(x0)		#写入映射IO寄存器，其中低4️位连接发光二极管
	38:		3e800113		addi x2 x0 1000		#配置定时器1比较寄存器的初值，1000
	3c:		44202a23		sw x2 1108(x0)		#写入映射定时器1比较寄存器，当定时器计数为1000时，发起定时器中断就绪
	40:		00100113		addi x2 x0 1		#配置定时器1使能
	44:		44202623		sw x2 1100(x0)		#写入映射定时器使能寄存器
	48:		c3506113		ori x2 x0 3125		#配置定时器时基初值3125
	4c:		00611113		slli x2 x2 5		#配置定时器时基初值200000，即200000*1000*10ns=2s
	50:		44202023		sw x2 1088(x0)		#写入映射定时器时基寄存器，打开定时器
00000054 <while(1)>:
	54:		00000013		nop					#进入空循环，等待定时器中断产生
	58:		00000013		nop					#
	5c:		00000013		nop					#
	60:		00000013		nop					#
	64:		00000013		nop					#
	68:		00000013		nop					#
	6c:		00000013		nop					#
	70:		00000013		nop					#
	74:		fe1ff0ef		jal x1 0x54 <while(1)>					#

00000078 <hhh>:									#定时器服务
	78:		45402103		lw x2 1108(x0)		#读取定时器比较寄存器的值
	7c:		3e810113		addi x2 x2 1000		#不改变定时器的值，仅增加1000比较寄存器的值，使其再产生2s的定时
	80:		44202a23		sw x2 1108(x0)		#写入映射定时器1比较寄存器，完成配置
	84:		48002103		lw x2 1152(x0)		#读取映射IO寄存器的值
	88:		00115113		srli x2 x2 1		#使其右移一位
	8c:		48202023		sw x2 1152(x0)		#写入映射IO寄存器
	90:		30200073		mret				#退出定时器服务


